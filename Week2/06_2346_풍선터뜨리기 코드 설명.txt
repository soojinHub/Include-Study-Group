이중환형연결리스트를 구현해서 풀이했습니다.
6~11 노드 구조체 선언. n: 풍선 속 숫자 idx: 풍선 순서
13 리스트를 만들기 위한 head
14 현재 노드를 가리키기 위한 cur
16 몇개의 노드를 만들 것인지 매개변수 num 으로 받음
17 노드 tmp를 만들어 메모리 할당
18 현재 head 가 tmp

20 노트의 개수만큼 반복
21~22 newnode 만들고 메모리 할당
23 tmp의 next link 가 newnode 가리킴
24 newnode 의 prev link 가 tmp 가리킴 //이중연결
25 tmp 를 한 칸 앞으로 땡겨 방금 만든 newnode 를 가리키도록
26 newnode에 숫자 입력
27 newnode 의 idx 입력
29 마지막 노드의 next link 는 첫번째 newnode 가리킴
30 첫번재 newnode의 prev link 는 마지막 newnode 가리킴 //환형이 되도록 연결

33~34 삭제할 노드를 매개변수로 받아서 그 노드의 idx 출력
35 삭제할 노드 이전의 노드가 삭제할 노드 다음의 노드를 가리키도록
36 삭제할 노드 다음의 노드가 삭제할 노드 이전의 노드를 가리키도록

40 n 만큼 이동한 후 현재 노드를 반환할 함수
41 풍선 속 숫자가 양수라면
42 그 숫자만큼
43 cur 이 오른쪽 노드로 이동
46 풍선 속 숫자가 음수라면
47 그 숫자만큼
48 cur 이 왼쪽 노드로 이동
51 이동한 후 cur 이 가리키는 노드 반환

54 main 함수 시작
55~56 풍선의 개수 입력 받기
57 풍선의 개수만큼 노드를 만들어 환형이중연결리스트 생성
59 현재 노드 cur 을 첫번째 newnode 로 설정
60 첫번째 풍선 터뜨림
61 풍선 개수 -1 만큼 반복
62 터뜨린 풍선(=현재 노드)의 숫자만큼 이동한 후 현재 노드로 설정
63 현재 노드 삭제 (현재 풍선 터뜨리기)